////////////////////////////////////////////
// 
// General parameters of calculation. 
// note: use " = " to divide parameter name and parameter value (spaces are nesessery)
// Default value is specified in [..]. You will not get "parameter not found" error for the parameters with default values.
// Can not use spaces in string values.
// 
////////////////////////////////////////////

/------------------------------------------------------------------------------------------------------
/** CCMC parameters
/------------------------------------------------------------------------------------------------------

// Simulation total time.
// Number in days.
nDays = 0.041666666666667

max_threads = 14


/------------------------------------------------------------------------------------------------------
/** General parameters
/------------------------------------------------------------------------------------------------------
// Output lvl
// Greater value - more output.
outputLvl = 1

// Time step. 
// Number in hours.
timeStep = 1

// Using diffusions flags. 
// Yes, No
useRadialDiffusion = Yes
//Yes

// Using diffusions flags.
// Yes, No
useAlphaDiffusion = Yes

// Using diffusions flags.
// Yes, No
useEnergyDiffusion = Yes

// Using diffusions flags.
// Yes, No
usePcAlphaMixedTerms = Yes

// DLL type (which method to use to calculate).
// [DLLT_B], - Radial diffusion by magnetic field variations 
// DLLT_BE - Radial diffusion by magnetic and electric fields variations
DLLType = DLLT_B

// Flag, using Kp index. False - don't use, constant - use constant value, file - read from fileKp.
// [file], constant, No
useKp = constant

// Constant Kp value (if it's a constant).
// Number.
constKp = 2

// Flag, using boundary flux dependences if equal true.
// [file], constant, No
useBf = 

// constant Bf value (if it's constant). 
// Number.
constBf = 

// Bf file name. 
// File name.
fileBf = 

// constant Bf value (if it's constant). 
// Number.

// Flag, using plasma pause location. Calculated as max Kp24 if 'calculate'.
// file, constant, calculate, [No]
useLpp = calculate

// constant Lpp value (if it's constant). 
// Number. [0]
constLpp = 0

// Lpp file name. 
// File name.
fileLpp = ./Input/Lpp.dat

// Flag, using tau.
// [constant], x/Kp
usetau = constant
//x/Kp

// Tau value.
// Number. Calculated as 'tau(time) = tau/Kp' if 'usetau = x/Kp'.
tau = 1e99
//3.0

//////////////////////// kckim //////////////////////////////

// Flag, using tauLpp. 
// [constant], No, coulomb, precipitaion, combined
usetauLpp = constant

// TauLpp value.
// Number. Equal 1e99 if 'usetauLpp = No'.
tauLpp = 1e99

/////////////////////////////////////////////////////////////

// Flag, output model matrix
// Yes, [No]
outputModelMatrix = [No]

// Flag, keep PSD positive no matter what
// Yes, [No]
NoNegative = Yes

/------------------------------------------------------------------------------------------------------
/** General programm output parameters structure.
/------------------------------------------------------------------------------------------------------
// DEPRECATED. Time step for output. 
// Number in hrs.
general_Output_parameters.timeStep = 0.09 


// Number of iterations between outputs.
// Number.
general_Output_parameters.iterStep = 1.0;

// log-file name.
// File name. [logfile.log]
general_Output_parameters.logFileName = logfile.log;

// output folder name.
// Folder name. [./]
general_Output_parameters.folderName = ./Output/

// 1d-output file name.
// File name. [out1d.plt]
general_Output_parameters.fileName1D = out1d.dat

/------------------------------------------------------------------------------------------------------
/** Grid
/------------------------------------------------------------------------------------------------------

// Radial diffusion grid type. 
// GT_FILE from file, radialDiffusionGrid_filename
// GT_L_PC_ALPHA, - (L, pc, alpha) grid
// GT_L_MU_J, - (L, mu, J) grid
// GT_L_MU_ALPHA - (L, mu, alpha) grid
// radialDiffusionGrid_type GT_L_MU_J
radialDiffusionGrid_type = GT_L_MU_ALPHA


// Local diffusions grid type
// GT_FILE from file, localDiffusionsGrid_filename
// GT_L_PC_ALPHA, - (L, pc, alpha) grid
// GT_L_MU_J, - (L, mu, J) grid
// GT_L_MU_ALPHA - (L, mu, alpha) grid
// GT_PERP_TO_L_MU_J - ortogonal grid on each L (radialDiffusionGrid_type should be GT_GT_L_MU_ALPHA)
localDiffusionsGrid_type = GT_L_MU_ALPHA

// Filename, if grid load from file
// File name
radialDiffusionGrid_filename = ./Input/grid1.plt

// Filename, if grid load from file
// File name
localDiffusionsGrid_filename = ./Input/grid1.plt

/------------------------------------------------------------------------------------------------------
/** %Grid element parameters
/------------------------------------------------------------------------------------------------------

// L grid name.
// String. [L]
localDiffusionsGrid_L.name = L

// L grid size.
localDiffusionsGrid_L.size = 25
//46

// Flag, use logarithmic scale.
// Yes, No
localDiffusionsGrid_L.useLogScale = No

// min value.
// Number. 
localDiffusionsGrid_L.min = 1.0
//1

// max value.
// Number.
/////// kckim ///////////
//  5.0<L<7.0
/////////////////////////
localDiffusionsGrid_L.max = 6.6
//5.5
	
// Epc grid name.
// String. [Energy, MeV]
localDiffusionsGrid_epc.name = Energy,_MeV

// Epc grid size
// Number.
localDiffusionsGrid_epc.size = 25

// Flag, use logarithmic scale.
// Yes, No
localDiffusionsGrid_epc.useLogScale = Yes

// min value. 
// Number in MeV.
localDiffusionsGrid_epc.min = 0.01

// max value.
// Number in MeV.
localDiffusionsGrid_epc.max = 10.0

// Pitch angle grid name.
// String. [Pitch angle, deg]
localDiffusionsGrid_alpha.name = Pitch angle,_deg

// Pitch angle grid size.
// Number.
localDiffusionsGrid_alpha.size = 25

// Pitch angle grid use log scale.
// Yes, No
localDiffusionsGrid_alpha.useLogScale = Yes

// min value. 
// Number.
localDiffusionsGrid_alpha.min = 0.3

// max value.
// Number.
localDiffusionsGrid_alpha.max = 89.7

/------------------------------------------------------------------------------------------------------
/** Bundary conditions parameters structure.
/------------------------------------------------------------------------------------------------------

// Type. 
// BCT_CONSTANT_VALUE, - Constant PSD value on the boundary, equal to ..BoundaryCondition.value
// BCT_CONSTANT_DERIVATIVE, - Constant PSD derivarive on the boundary, equal to ..BoundaryCondition.value
// [BCT_CONSTANT_PSD], - Constant PSD value on the boundary, equal to initial PSD value on the boundary
// BCT_FILE - Time dependent boundary value readed from file
// BCT_FILE_CHANGES - Similar to BCT_FILE. Sources/losses are calculated from the loaded file as change of PSD each time step. These changes are applied to calculated PSD.
L_LowerBoundaryCondition.type = BCT_CONSTANT_VALUE

// Value for boundary condition (for PSD or derivative of PSD, depends if ..BoundaryCondition.type value)
// Number. [1e-22]
L_LowerBoundaryCondition.value = 1e-21

// File name to load boundary conditions from. Warning: there is no check for grid or time steps wile liading the file. Be careful.
// File name.
L_LowerBoundaryCondition.filename

// Type. 
// BCT_CONSTANT_VALUE, - Constant PSD value on the boundary, equal to ..BoundaryCondition.value
// BCT_CONSTANT_DERIVATIVE, - Constant PSD derivarive on the boundary, equal to ..BoundaryCondition.value
// [BCT_CONSTANT_PSD], - Constant PSD value on the boundary, equal to initial PSD value on the boundary
// BCT_FILE - Time dependent boundary value readed from file
// BCT_FILE_CHANGES - Similar to BCT_FILE. Sources/losses are calculated from the loaded file as change of PSD each time step. These changes are applied to calculated PSD.
// L_UpperBoundaryCondition.type BCT_CONSTANT_PSD
L_UpperBoundaryCondition.type = BCT_CONSTANT_PSD

// Value for boundary condition (for PSD or derivative of PSD, depends if ..BoundaryCondition.type value)
// Number. [1e-22]
L_UpperBoundaryCondition.value = 0

// File name to load boundary conditions from. Warning: there is no check for grid or time steps wile liading the file. Be careful.
// File name.
L_UpperBoundaryCondition.filename = 

// Type. 
// BCT_CONSTANT_VALUE, - Constant PSD value on the boundary, equal to ..BoundaryCondition.value
// BCT_CONSTANT_DERIVATIVE, - Constant PSD derivarive on the boundary, equal to ..BoundaryCondition.value
// [BCT_CONSTANT_PSD], - Constant PSD value on the boundary, equal to initial PSD value on the boundary
// BCT_FILE - Time dependent boundary value readed from file
// BCT_FILE_CHANGES - Similar to BCT_FILE. Sources/losses are calculated from the loaded file as change of PSD each time step. These changes are applied to calculated PSD.
pc_LowerBoundaryCondition.type = BCT_CONSTANT_PSD

// Value for boundary condition (for PSD or derivative of PSD, depends if ..BoundaryCondition.type value)
// Number. [1e-22]
pc_LowerBoundaryCondition.value 

// File name to load boundary conditions from. Warning: there is no check for grid or time steps wile liading the file. Be careful.
// File name.
pc_LowerBoundaryCondition.filename = 

// Type. 
// BCT_CONSTANT_VALUE, - Constant PSD value on the boundary, equal to ..BoundaryCondition.value
// BCT_CONSTANT_DERIVATIVE, - Constant PSD derivarive on the boundary, equal to ..BoundaryCondition.value
// [BCT_CONSTANT_PSD], - Constant PSD value on the boundary, equal to initial PSD value on the boundary
// BCT_FILE - Time dependent boundary value readed from file
// BCT_FILE_CHANGES - Similar to BCT_FILE. Sources/losses are calculated from the loaded file as change of PSD each time step. These changes are applied to calculated PSD.
pc_UpperBoundaryCondition.type = BCT_CONSTANT_VALUE

// Value for boundary condition (for PSD or derivative of PSD, depends if ..BoundaryCondition.type value)
// Number. [1e-22]
pc_UpperBoundaryCondition.value = 1e-22

// File name to load boundary conditions from. Warning: there is no check for grid or time steps wile liading the file. Be careful.
// File name.
pc_UpperBoundaryCondition.filename

// Type. 
// BCT_CONSTANT_VALUE, - Constant PSD value on the boundary, equal to ..BoundaryCondition.value
// BCT_CONSTANT_DERIVATIVE, - Constant PSD derivarive on the boundary, equal to ..BoundaryCondition.value
// [BCT_CONSTANT_PSD], - Constant PSD value on the boundary, equal to initial PSD value on the boundary
// BCT_FILE - Time dependent boundary value readed from file
// BCT_FILE_CHANGES - Similar to BCT_FILE. Sources/losses are calculated from the loaded file as change of PSD each time step. These changes are applied to calculated PSD.
alpha_LowerBoundaryCondition.type = BCT_CONSTANT_DERIVATIVE

// Value for boundary condition (for PSD or derivative of PSD, depends if ..BoundaryCondition.type value)
// Number. [1e-22]
alpha_LowerBoundaryCondition.value = 1e-21

// File name to load boundary conditions from. Warning: there is no check for grid or time steps wile liading the file. Be careful.
// File name.
alpha_LowerBoundaryCondition.filename

// Type. 
// BCT_CONSTANT_VALUE, - Constant PSD value on the boundary, equal to ..BoundaryCondition.value
// BCT_CONSTANT_DERIVATIVE, - Constant PSD derivarive on the boundary, equal to ..BoundaryCondition.value
// [BCT_CONSTANT_PSD], - Constant PSD value on the boundary, equal to initial PSD value on the boundary
// BCT_FILE - Time dependent boundary value readed from file
// BCT_FILE_CHANGES - Similar to BCT_FILE. Sources/losses are calculated from the loaded file as change of PSD each time step. These changes are applied to calculated PSD.
alpha_UpperBoundaryCondition.type = BCT_CONSTANT_DERIVATIVE

// Value for boundary condition (for PSD or derivative of PSD, depends if ..BoundaryCondition.type value)
// Number. [1e-22]
alpha_UpperBoundaryCondition.value = 1e-21

// File name to load boundary conditions from. Warning: there is no check for grid or time steps wile liading the file. Be careful.
// File name.
alpha_UpperBoundaryCondition.filename

/------------------------------------------------------------------------------------------------------
/** Initial %PSD parameters structure.
/------------------------------------------------------------------------------------------------------

// Initial PSD type
//	[IPSDT_STEADY_STATE], - Steady state (3D only). initial_PSD_some_constant_value used as minimal value for PSD and for Inner belt imitation.
//	IPSDT_CONSTANT, - Constant PSD equal to psdRadialDiffusion.initial_PSD_some_constant_value
//	IPSDT_FILE, - From file
//	IPSDT_FILE_GRID, - From file witn grid included
//	IPSDT_ORBIT_FLUX_2D - 2D maxwellian [Tao et al., 2008]
//	IPSDT_STEADY_STATE_FROM_BOUNDARY - Steady state solution from Upper L boundary values
/////////////////////// kckim //////////////////////////////
//      IPSDT_STEADY_STATE_TWO_ZONE

// psdRadialDiffusion.initial_PSD_Type IPSDT_STEADY_STATE
psdRadialDiffusion.initial_PSD_Type = IPSDT_FILE

//////////////////////////////////////////////////////////////


// File name, if we need to load initial values from file.
// File name.
psdRadialDiffusion.initial_PSD_fileName = ./Input/da3d_init_psd.dat

// Tau for steady state, if we are calculation initial values as steady state solution.
// Number in days. [0]. initial_PSD_tauSteadyState = 4.0/Kp(time=0) if initial_PSD_tauSteadyState == 0
psdRadialDiffusion.initial_PSD_tauSteadyState = 0


//////////////////////////// kckim //////////////////////////////
/ Flag, using tauLpp. for two-zone steady state
// constant, coulomb, precipitation, [combined]
psdRadialDiffusion.usetauLpp_SteadyState = combined


// TauLpp for two-zone steady state if usetauLpp_SteadyState is constant
// Number in days. [0]
psdRadialDiffusion.initial_PSD_tauLppSteadyState = 0
/////////////////////////////////////////////////////////////////



// Kp for steady state. If Kp0 == 0 then it sets equal to Kp(time=0).
// Number. [0]
// psdRadialDiffusion.initial_PSD_Kp0 = 

// Some %psd value. Used as initial PSD value everywhere if initial_PSD_Type = IPSDT_CONSTANT or as minimal initial PSD value in other cases. Also used for some inner belt imitation if initial_PSD_Type = IPSDT_STEADY_STATE.
// Don't recomment to set < 1e-21 for interpolation stability reasons.
// Number. [1e-99].
psdRadialDiffusion.initial_PSD_some_constant_value = 1e-21

// Approximation for flux at L=7.
// J_L7, [J_L7_corrected]
psdRadialDiffusion.initial_PSD_J_L7_function = J_L7_corrected_0


// Outer L-boundary PSD value for steady state. Will be multiplied to boundary flux at L=7 and to Bf(time=0) if Bf is used.
// Number, [1].
psdRadialDiffusion.initial_PSD_outer_psd = 1

// Inner L-boundary PSD value for steady state.
// Number, 0.
psdRadialDiffusion.initial_PSD_inner_psd = 0

/------------------------------------------------------------------------------------------------------
/** PSD output parameters structure
/------------------------------------------------------------------------------------------------------

// Folder name for radial grid psd output.
// Folder name. [general_Output_parameters.folderName]
psdRadialDiffusion.output_PSD_folderName

// File name for radial grid psd output.
// File name. [out4d_rad.dat]
psdRadialDiffusion.output_PSD_fileName4D = OutPSD_rad.dat

// Time step for radial grid psd output.
// Number in hours. [general_Output_parameters.timeStep]
psdRadialDiffusion.output_PSD_timeStep

// Folder name for local grid psd output
// Folder name. [general_Output_parameters.folderName]
psdLocalDiffusions.output_PSD_folderName

// File name for local grid psd output.
// File name. [out4d_rad.dat]
psdLocalDiffusions.output_PSD_fileName4D = OutPSD.dat

// Time step for local grid psd output.
// Number in hours. [general_Output_parameters.timeStep]
psdLocalDiffusions.output_PSD_timeStep


// Approximation method for second derivative in pitch angle and energy operators.
// 	[AM_Split_LR], - Left and right differences and Split method
//	AM_Split_C,  - Center differences and Split method
//	AM_Block_LR, - Left and right differences and Block method
//	AM_Block_C   - Center differences and Split method
psdLocalDiffusions.approximationMethod = AM_Block_LR

// Solution method. 
// 	SM_Tridiag, - tridiagonal, default for Split
//	SM_Gauss, - Gauss
//	SM_Relaxation - Relaxation iteration method, default for Block
//	SM_Lapack - Use Lapack package for matrix invertion.
psdLocalDiffusions.solutionMethod = SM_Lapack

/------------------------------------------------------------------------------------------------------
/** Sources and losses
/------------------------------------------------------------------------------------------------------

// Use additional sources at L-top
// Yes/[No]
sourcesAndLosses.SL_L_top = No

// Additional sources at L-top filename
// File name
sourcesAndLosses.SL_L_top_filename = 

// Use additional sources at E-min
// Yes/[No]
sourcesAndLosses.SL_E_min = No

// Additional sources at E_min filename
// File name
sourcesAndLosses.SL_E_min_filename

/** %Interpolation parameters structure

// Interpolation type
//	IT_NONE, - no transfaring PSD between grids
//	IT_COPY, - copying from grid to grid
//	IT_LINEAR, - Linear interpolation
//	IT_POLYNOMIAL, - Polynomial interpolation
//	IT_SPLINE - Spline interpolation
interpolation.type = IT_SPLINE
//IT_COPY // for 1d

// Flag, if we should interpolate logarighm of the values.
// [Log_10, Log_2, Log_E, NoLog]
interpolation.useLog = NoLog

// Parameters for spline interpolation - defined the ratio between spline and linear. Works as smoothing of Spline interpolation.
// Any number between 0 and 1.
// 0 - pure spline, 
// 1 - pure linear
interpolation.linearSplineCoef = 0
// Maximum second derivative value, to start using linearSplineCoef.
// Number.

interpolation.maxSecondDerivative = 1
/------------------------------------------------------------------------------------------------------
/** List of diffusion coefficients files
/------------------------------------------------------------------------------------------------------
CoeffFileName = ./Dxx_ini_ISWAT/Hiss/Daa_hiss_pp.ini
CoeffFileName = ./Dxx_ini_ISWAT/Hiss/Dpa_hiss_pp.ini
CoeffFileName = ./Dxx_ini_ISWAT/Hiss/Dpp_hiss_pp.ini


CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_day_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_day_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_day_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_day_lowL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_eve_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_eve_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_eve_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_eve_lowL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_night_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_night_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_night_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Daa_chorus_night_lowL_MidLat.ini

CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_day_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_day_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_day_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_day_lowL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_eve_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_eve_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_eve_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_eve_lowL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_night_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_night_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_night_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpa_chorus_night_lowL_MidLat.ini

CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_day_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_day_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_day_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_day_lowL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_eve_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_eve_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_eve_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_eve_lowL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_night_highL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_night_highL_MidLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_night_lowL_LowLat.ini
CoeffFileName = ./Dxx_ini_ISWAT/LB_Chorus/Dpp_chorus_night_lowL_MidLat.ini


CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Daa_UB_chorus_day_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Daa_UB_chorus_day_lowL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Daa_UB_chorus_eve_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Daa_UB_chorus_eve_lowL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Daa_UB_chorus_night_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Daa_UB_chorus_night_lowL.ini

CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpa_UB_chorus_day_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpa_UB_chorus_day_lowL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpa_UB_chorus_eve_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpa_UB_chorus_eve_lowL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpa_UB_chorus_night_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpa_UB_chorus_night_lowL.ini

CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpp_UB_chorus_day_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpp_UB_chorus_day_lowL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpp_UB_chorus_eve_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpp_UB_chorus_eve_lowL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpp_UB_chorus_night_highL.ini
CoeffFileName = ./Dxx_ini_ISWAT/UB_Chorus/Dpp_UB_chorus_night_lowL.ini
